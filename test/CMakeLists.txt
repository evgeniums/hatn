PROJECT(hatnlibs-test)

SET (TEST_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})

INCLUDE(hatn/ConfigExe)
INCLUDE(hatn/ConfigTest)

SET(HEADERS
    ${HATN_COMMON_SRC}/include/hatn/test/pluginlist.h
    ${CMAKE_CURRENT_SOURCE_DIR}/testwrapper.h
)

SET(SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/testwrapper.cpp
    ${HATN_COMMON_SRC}/include/hatn/test/multithreadfixture.cpp
)

IF (prograph IN_LIST HATN_MODULES)
    SET(SOURCES
        ${SOURCES}
        ${HATN_PROGRAPH_SRC}/include/hatn/test/threadqfixture.cpp
    )
ENDIF()

IF (HATN_TEST_WRAP_C)
    MESSAGE(STATUS "Building c-wrapped test library")
    ADD_LIBRARY(${PROJECT_NAME} ${LINK_TYPE} ${SOURCES} ${HEADERS})
ELSE(HATN_TEST_WRAP_C)
    MESSAGE(STATUS "Building executable test application")
    BUILD_EXE()
ENDIF(HATN_TEST_WRAP_C)

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE ${TEST_BINARY_DIR})
IF (NOT MSVC)
    TARGET_COMPILE_OPTIONS(${PROJECT_NAME} PRIVATE -Wno-sign-compare)
ENDIF()

ADD_HATN_MODULES(test ${HATN_MODULES})
TEST_HATN_MODULES(${HATN_MODULES})

CREATE_TEST_CONFIG_FILE()

IF (BUILD_IOS)
    TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE -DTEST_ASSETS_PATH=\"${TEST_BINARY_DIR}\")
    TARGET_COMPILE_DEFINITIONS(${PROJECT_NAME} PRIVATE -DTEST_TMP_PATH=\"${TEST_BINARY_DIR}/tmp\")
ENDIF()
